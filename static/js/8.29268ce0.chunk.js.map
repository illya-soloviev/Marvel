{"version":3,"sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks.js/http.hook.js","components/errorBoundary/ErrorBoundary.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js"],"names":["setContent","process","Component","newComicsLoading","_jsx","Spinner","ErrorMessage","Error","ComicsList","_useState","useState","_useState2","_slicedToArray","comicsList","setComicsList","_useState3","_useState4","offset","setOffset","_useState5","_useState6","setNewComicsLoading","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useMarvelService","getAllComics","setProcess","useEffect","onComicsRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","concat","_toConsumableArray","_jsxs","className","children","comicsArr","comics","map","comicInfo","imgStyle","thumbnail","CSSTransition","timeout","classNames","Link","to","id","src","alt","style","title","price","TransitionGroup","component","renderComics","disabled","onClick","ComicsPage","_Fragment","Helmet","name","content","ErrorBoundary","AppBanner","display","width","height","objectFit","margin","img","_useHttp","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","undefined","fetch","sent","ok","status","json","abrupt","t0","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","_baseOffset","getAllCharacters","res","results","_transformCharacter","getCharacterByName","_ref2","_callee2","_context2","getCharacter","_ref3","_callee3","_context3","_x2","char","description","slice","path","extension","homepage","urls","wiki","items","_ref4","_callee4","_args4","_context4","_transformComic","getComic","_ref5","_callee5","comicId","_context5","_x3","comicData","_comicData$textObject","pageCount","language","textObjects","prices","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","error","_createClass","key","value","errorInfo","console","log","this","setState","props","avengers","avengersLogo"],"mappings":"2NASMA,EAAa,SAACC,EAASC,EAAWC,GACpC,OAAOF,GACH,IAAK,UACD,OAAOG,cAACC,IAAO,IACnB,IAAK,UACD,OAAOF,EAAmBC,cAACF,EAAS,IAAKE,cAACC,IAAO,IACrD,IAAK,YACD,OAAOD,cAACF,EAAS,IACrB,IAAK,QACD,OAAOE,cAACE,IAAY,IACxB,QACI,MAAM,IAAIC,MAAM,8BAiFbC,EA7EI,WACf,IAAAC,EAAoCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,EAA4BL,mBAAS,GAAEM,EAAAJ,YAAAG,EAAA,GAAhCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,EAAgDT,oBAAS,GAAMU,EAAAR,YAAAO,EAAA,GAAxDhB,EAAgBiB,EAAA,GAAEC,EAAmBD,EAAA,GAC5CE,EAAsCZ,oBAAS,GAAMa,EAAAX,YAAAU,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAElCG,EAA4CC,cAArCC,EAAYF,EAAZE,aAAc3B,EAAOyB,EAAPzB,QAAS4B,EAAUH,EAAVG,WAE9BC,qBAAU,WACNC,EAAgBd,GAAQ,KAEzB,IAEH,IAAMc,EAAkB,SAACd,EAAQe,GACnBX,GAAVW,GAEAJ,EAAaX,GACRgB,KAAKC,GACLD,MAAK,kBAAMJ,EAAW,iBAGzBK,EAAqB,SAACC,GACxB,IAAIC,GAAQ,EACRD,EAAcE,OAAS,IACvBD,GAAQ,GAGZtB,GAAc,SAAAD,GAAU,SAAAyB,OAAAC,YAAQ1B,GAAU0B,YAAKJ,OAC/Cd,GAAoB,GACpBH,GAAU,SAAAD,GAAM,OAAIA,EAAS,KAC7BQ,EAAeW,IAkCnB,OACII,eAAA,OAAKC,UAAU,eAAcC,SAAA,CACxB1C,EAAWC,GAAS,kBAjCR,SAAC0C,GAClB,IAAMC,EAASD,EAAUE,KAAI,SAACC,GAC1B,IAAIC,EAAW,CAAC,UAAc,SAK9B,MAJ4B,wEAAxBD,EAAUE,YACVD,EAAW,CAAC,UAAc,UAI1B3C,cAAC6C,IAAa,CAAoBC,QAAS,IAAKC,WAAY,eAAeT,SACvEtC,cAAA,MAAIqC,UAAU,eAAcC,SACxBF,eAACY,OAAI,CAACC,GAAE,WAAAf,OAAaQ,EAAUQ,IAAKZ,SAAA,CAChCtC,cAAA,OAAKmD,IAAKT,EAAUE,UAAWQ,IAAI,QAC/Bf,UAAU,mBACVgB,MAAOV,IACX3C,cAAA,OAAKqC,UAAU,oBAAmBC,SAAEI,EAAUY,QAC9ClB,eAAA,OAAKC,UAAU,qBAAoBC,SAAA,CAAEI,EAAUa,MAAM,aAP7Cb,EAAUQ,OActC,OACIlD,cAAA,MAAIqC,UAAU,eAAcC,SACxBtC,cAACwD,IAAe,CAACC,UAAW,KAAKnB,SAC5BE,MAQkBkB,CAAajD,KAAaV,GACrDC,cAAA,UAAQqC,UAAU,mCACVsB,SAAU5D,EACVsD,MAAO,CAAC,QAAWjC,EAAc,OAAS,SAC1CwC,QAAS,kBAAMjC,EAAgBd,IAAQyB,SAC3CtC,cAAA,OAAKqC,UAAU,QAAOC,SAAC,oB,wBCtExBuB,UApBI,WACf,OACIzB,eAAA0B,WAAA,CAAAxB,SAAA,CACIF,eAAC2B,IAAM,CAAAzB,SAAA,CACHtC,cAAA,QACIgE,KAAK,cACLC,QAAQ,kBAEZjE,cAAA,SAAAsC,SAAO,qBAEXtC,cAACkE,IAAa,CAAA5B,SACVtC,cAACmE,IAAS,MAEdnE,cAACkE,IAAa,CAAA5B,SACVtC,cAACI,EAAU,W,gCCnBZ,UAA0B,kC,OCQ1BF,IANM,WACjB,OACIF,cAAA,OAAKqD,MAAO,CAAEe,QAAS,QAASC,MAAO,QAASC,OAAQ,QAAQC,UAAW,UAAWC,OAAQ,UAAYrB,IAAKsB,EAAKrB,IAAI,Y,4ECsEjH7B,IAxEU,WACrB,IAAAmD,ECDmB,WACnB,IAAArE,EAA8BC,mBAAS,WAAUC,EAAAC,YAAAH,EAAA,GAA1CR,EAAOU,EAAA,GAAEkB,EAAUlB,EAAA,GAwB1B,MAAO,CAACoE,QAtBQC,sBAAW,eAAAC,EAAAC,YAAAC,IAAAC,MAAC,SAAAC,EAAOC,GAAG,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAAV,IAAAW,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACZ,OADcV,EAAMK,EAAAvD,OAAA,QAAA6D,IAAAN,EAAA,GAAAA,EAAA,GAAG,MAAOJ,EAAII,EAAAvD,OAAA,QAAA6D,IAAAN,EAAA,GAAAA,EAAA,GAAG,KAAMH,EAAOG,EAAAvD,OAAA,QAAA6D,IAAAN,EAAA,GAAAA,EAAA,GAAG,CAAC,eAAiB,oBAC7F/D,EAAW,WAAWkE,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGKE,MAAMb,EAAK,CAACC,SAAQC,OAAMC,YAAU,KAAD,EAA5C,IAARC,EAAQK,EAAAK,MAEAC,GAAG,CAADN,EAAAE,KAAA,eACN,IAAI1F,MAAM,mBAAD+B,OAAoBgD,EAAG,cAAAhD,OAAaoD,EAASY,SAAU,KAAD,UAAAP,EAAAE,KAAA,GAGtDP,EAASa,OAAO,KAAD,GAAxB,OAAJZ,EAAII,EAAAK,KAAAL,EAAAS,OAAA,SACHb,GAAI,QAES,MAFTI,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAEXlE,EAAW,SAASkE,EAAAU,GAAA,yBAAAV,EAAAW,UAAArB,EAAA,mBAG3B,gBAAAsB,GAAA,OAAA1B,EAAA2B,MAAA,KAAAf,YAhB0B,GAgBxB,IAMcgB,WAJE7B,uBAAY,WAC3BnD,EAAW,aACZ,IAE0B5B,UAAS4B,cDxBaiF,GAA5C/B,EAAOD,EAAPC,QAAS8B,EAAU/B,EAAV+B,WAAY5G,EAAO6E,EAAP7E,QAAS4B,EAAUiD,EAAVjD,WAE/BkF,EAAW,4CACXC,EAAU,0CACVC,EAAc,IAEdC,EAAgB,eAAAjC,EAAAC,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAApE,EAAAkG,EAAAvB,EAAAC,UAAA,OAAAV,IAAAW,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAA2B,OAApBhF,EAAM2E,EAAAvD,OAAA,QAAA6D,IAAAN,EAAA,GAAAA,EAAA,GAAGqB,EAAWlB,EAAAE,KAAA,EAC9BlB,EAAQ,GAADzC,OAAIyE,EAAQ,8BAAAzE,OAA6BrB,EAAM,KAAAqB,OAAI0E,IAAW,KAAD,EAA7E,OAAHG,EAAGpB,EAAAK,KAAAL,EAAAS,OAAA,SACFW,EAAIxB,KAAKyB,QAAQvE,IAAIwE,IAAoB,wBAAAtB,EAAAW,UAAArB,OACnD,kBAHqB,OAAAJ,EAAA2B,MAAA,KAAAf,YAAA,GAKhByB,EAAkB,eAAAC,EAAArC,YAAAC,IAAAC,MAAG,SAAAoC,EAAOpD,GAAI,IAAA+C,EAAA,OAAAhC,IAAAW,MAAA,SAAA2B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,cAAAwB,EAAAxB,KAAA,EACtBlB,EAAQ,GAADzC,OAAIyE,EAAQ,oBAAAzE,OAAmB8B,EAAI,KAAA9B,OAAI0E,IAAW,KAAD,EAAjE,OAAHG,EAAGM,EAAArB,KAAAqB,EAAAjB,OAAA,SACFW,EAAIxB,KAAKyB,QAAQvE,IAAIwE,IAAoB,wBAAAI,EAAAf,UAAAc,OAChD,gBAH0Bb,GAAA,OAAAY,EAAAX,MAAA,KAAAf,YAAA,GAKlB6B,EAAY,eAAAC,EAAAzC,YAAAC,IAAAC,MAAG,SAAAwC,EAAOtE,GAAE,IAAA6D,EAAA,OAAAhC,IAAAW,MAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,cAAA4B,EAAA5B,KAAA,EACRlB,EAAQ,GAADzC,OAAIyE,EAAQ,eAAAzE,OAAcgB,EAAE,KAAAhB,OAAI0E,IAAW,KAAD,EAA1D,OAAHG,EAAGU,EAAAzB,KAAAyB,EAAArB,OAAA,SACFa,EAAoBF,EAAIxB,KAAKyB,QAAQ,KAAG,wBAAAS,EAAAnB,UAAAkB,OAClD,gBAHiBE,GAAA,OAAAH,EAAAf,MAAA,KAAAf,YAAA,GAKZwB,EAAsB,SAACU,GACzB,MAAO,CACH3D,KAAM2D,EAAK3D,KACX4D,YAAaD,EAAKC,YAAcD,EAAKC,YAAYC,MAAM,EAAG,KAAO,8CACjEjF,UAAW+E,EAAK/E,UAAUkF,KAAO,IAAMH,EAAK/E,UAAUmF,UACtDC,SAAUL,EAAKM,KAAK,GAAG/C,IACvBgD,KAAMP,EAAKM,KAAK,GAAG/C,IACnBhC,GAAIyE,EAAKzE,GACTV,OAAQmF,EAAKnF,OAAO2F,QAItB3G,EAAY,eAAA4G,EAAAtD,YAAAC,IAAAC,MAAG,SAAAqD,IAAA,IAAAxH,EAAAkG,EAAAuB,EAAA7C,UAAA,OAAAV,IAAAW,MAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,OAA2B,OAApBhF,EAAMyH,EAAArG,OAAA,QAAA6D,IAAAwC,EAAA,GAAAA,EAAA,GAAGzB,EAAW0B,EAAA1C,KAAA,EAC1BlB,EAAQ,GAADzC,OAAIyE,EAAQ,0BAAAzE,OAAyBrB,EAAM,KAAAqB,OAAI0E,IAAW,KAAD,EAAzE,OAAHG,EAAGwB,EAAAvC,KAAAuC,EAAAnC,OAAA,SACFW,EAAIxB,KAAKyB,QAAQvE,IAAI+F,IAAgB,wBAAAD,EAAAjC,UAAA+B,OAC/C,kBAHiB,OAAAD,EAAA5B,MAAA,KAAAf,YAAA,GAKZgD,EAAQ,eAAAC,EAAA5D,YAAAC,IAAAC,MAAG,SAAA2D,EAAOC,GAAO,IAAA7B,EAAA,OAAAhC,IAAAW,MAAA,SAAAmD,GAAA,cAAAA,EAAAjD,KAAAiD,EAAAhD,MAAA,cAAAgD,EAAAhD,KAAA,EACflB,EAAQ,GAADzC,OAAIyE,EAAQ,WAAAzE,OAAU0G,EAAO,KAAA1G,OAAI0E,IAAW,KAAD,EAA3D,OAAHG,EAAG8B,EAAA7C,KAAA6C,EAAAzC,OAAA,SACFoC,EAAgBzB,EAAIxB,KAAKyB,QAAQ,KAAG,wBAAA6B,EAAAvC,UAAAqC,OAC3C,gBAHgBG,GAAA,OAAAJ,EAAAlC,MAAA,KAAAf,YAAA,GAKR+C,EAAkB,SAACO,GAAe,IAADC,EACnC,MAAO,CACZ9F,GAAI6F,EAAU7F,GACdI,MAAOyF,EAAUzF,MACjBsE,YAAamB,EAAUnB,aAAe,0BACtCqB,UAAWF,EAAUE,UAAS,GAAA/G,OACxB6G,EAAUE,UAAS,OACtB,2CACHrG,UAAWmG,EAAUnG,UAAUkF,KAAO,IAAMiB,EAAUnG,UAAUmF,UAChEmB,UAAkC,QAAxBF,EAAAD,EAAUI,YAAY,UAAE,IAAAH,OAAA,EAAxBA,EAA0BE,WAAY,QAChD3F,MAAOwF,EAAUK,OAAO,GAAG7F,MAAK,GAAArB,OAC1B6G,EAAUK,OAAO,GAAG7F,MAAK,KAC5B,kBAIF,MAAO,CACHkD,aACA5G,UACA4B,aACAqF,mBACAI,qBACAI,eACA9F,eACAiH,c,0FEnEFvE,EAAa,SAAAmF,GAAAC,YAAApF,EAAAmF,GAAA,IAAAE,EAAAC,YAAAtF,GAAA,SAAAA,IAAA,IAAAuF,EAAAC,YAAA,KAAAxF,GAAA,QAAAyF,EAAAlE,UAAAxD,OAAA2H,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAArE,UAAAqE,GAGd,OAHcL,EAAAF,EAAAQ,KAAAvD,MAAA+C,EAAA,OAAArH,OAAA0H,KACfI,MAAQ,CACJC,OAAO,GACVR,EAaA,OAbAS,YAAAhG,EAAA,EAAAiG,IAAA,oBAAAC,MAED,SAAkBH,EAAOI,GACrBC,QAAQC,IAAIN,EAAOI,GACnBG,KAAKC,SAAS,CAACR,OAAO,MACzB,CAAAE,IAAA,SAAAC,MAED,WACI,OAAyB,IAArBI,KAAKR,MAAMC,MACJjK,cAACE,IAAY,IAGjBsK,KAAKE,MAAMpI,aACrB4B,EAhBc,CAASpE,aAmBboE,O,+DCtBA,MAA0B,qCCA1B,MAA0B,0C,OCiB1BC,IAbG,WACd,OACI/B,eAAA,OAAKC,UAAU,cAAaC,SAAA,CACxBtC,cAAA,OAAKmD,IAAKwH,EAAUvH,IAAI,aACxBhB,eAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAAC,yBACRtC,cAAA,SAAK,iBAG/BA,cAAA,OAAKmD,IAAKyH,EAAcxH,IAAI","file":"static/js/8.29268ce0.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport {Link} from \"react-router-dom/cjs/react-router-dom\";\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport './comicsList.scss';\n\nconst setContent = (process, Component, newComicsLoading) => {\n    switch(process) {\n        case 'waiting':\n            return <Spinner/>;\n        case 'loading':\n            return newComicsLoading ? <Component/> : <Spinner/>;\n        case 'confirmed':\n            return <Component/>;\n        case 'error':\n            return <ErrorMessage/>;\n        default:\n            throw new Error('Unexpected process value');\n    }\n}\n\nconst ComicsList = () => {\n    const [comicsList, setComicsList] = useState([]);\n    const [offset, setOffset] = useState(0);\n    const [newComicsLoading, setNewComicsLoading] = useState(false);\n    const [comicsEnded, setComicsEnded] = useState(false);\n    \n    const {getAllComics, process, setProcess} = useMarvelService();\n\n    useEffect(() => {\n        onComicsRequest(offset, true);\n        // eslint-disable-next-line\n    }, []);\n\n    const onComicsRequest = (offset, initial) => {\n        initial ? setNewComicsLoading(false) : setNewComicsLoading(true);\n\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n            .then(() => setProcess('confirmed'));\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewComicsLoading(false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(ended);\n    }\n\n    const renderComics = (comicsArr) => {\n        const comics = comicsArr.map((comicInfo) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (comicInfo.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n\n            return (\n                <CSSTransition key={comicInfo.id} timeout={500} classNames={'comics__item'}>\n                    <li className=\"comics__item\">\n                        <Link to={`/comics/${comicInfo.id}`}>\n                            <img src={comicInfo.thumbnail} alt=\"comic\"\n                                className=\"comics__item-img\"\n                                style={imgStyle}/>\n                            <div className=\"comics__item-name\">{comicInfo.title}</div>\n                            <div className=\"comics__item-price\">{comicInfo.price}$</div>\n                        </Link>\n                    </li>\n                </CSSTransition>\n            );\n        });\n\n        return (\n            <ul className=\"comics__grid\">\n                <TransitionGroup component={null}>\n                    {comics}\n                </TransitionGroup>\n            </ul>\n        );\n    }\n\n    return (\n        <div className=\"comics__list\">\n            {setContent(process, () => renderComics(comicsList), newComicsLoading)}\n            <button className=\"button button__main button__long\"\n                    disabled={newComicsLoading}\n                    style={{'display': comicsEnded ? 'none' : 'block'}}\n                    onClick={() => onComicsRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Marvel comics\"\r\n                />\r\n                <title>Marvel comics</title>\r\n            </Helmet>\r\n            <ErrorBoundary>\r\n                <AppBanner/>\r\n            </ErrorBoundary>\r\n            <ErrorBoundary>\r\n                <ComicsList/>\r\n            </ErrorBoundary>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ComicsPage;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks.js/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const {request, clearError, process, setProcess} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=5b384501e48304843a7e8a1c83146bf3';\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            name: char.name,\r\n            description: char.description ? char.description.slice(0, 210) : 'There is no description for this character.',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            id: char.id,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const getAllComics = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComic);\r\n    }\r\n\r\n    const getComic = async (comicId) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${comicId}?${_apiKey}`);\r\n\t\treturn _transformComic(res.data.results[0]);\r\n\t};\r\n\r\n    const _transformComic = (comicData) => {\r\n        return {\r\n\t\t\tid: comicData.id,\r\n\t\t\ttitle: comicData.title,\r\n\t\t\tdescription: comicData.description || \"There is no description\",\r\n\t\t\tpageCount: comicData.pageCount\r\n\t\t\t\t? `${comicData.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comicData.thumbnail.path + \".\" + comicData.thumbnail.extension,\r\n\t\t\tlanguage: comicData.textObjects[0]?.language || \"en-us\",\r\n\t\t\tprice: comicData.prices[0].price\r\n\t\t\t\t? `${comicData.prices[0].price}$`\r\n\t\t\t\t: \"not available\"\r\n        }\r\n    }\r\n\r\n    return {\r\n        clearError,\r\n        process,\r\n        setProcess,\r\n        getAllCharacters,\r\n        getCharacterByName,\r\n        getCharacter,\r\n        getAllComics,\r\n        getComic\r\n    };\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [process, setProcess] = useState('waiting');\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-type' : 'application/json'}) => {\r\n        setProcess('loading');\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            return data;\r\n        } catch(e) {\r\n            setProcess('error');\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => {\r\n        setProcess('loading');\r\n    }, []);\r\n\r\n    return {request, clearError, process, setProcess};\r\n}","import { Component } from \"react/cjs/react.development\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({error: true})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error === true) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;"],"sourceRoot":""}